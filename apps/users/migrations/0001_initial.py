# Generated by Django 3.0.8 on 2020-07-21 07:31

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
        ('cms', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='uuid')),
                ('name', models.CharField(max_length=32, verbose_name='部门名称')),
                ('comment', models.CharField(max_length=200, verbose_name='备注')),
                ('created_by', models.CharField(max_length=32, verbose_name='创建人')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_on', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name_plural': '部门',
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='uuid')),
                ('title', models.CharField(max_length=32, verbose_name='标题')),
                ('url', models.CharField(max_length=128, verbose_name='路径')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='URL别名')),
                ('menu_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cms.LeftMenu', verbose_name='所属一级菜单')),
                ('pid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.Permission', verbose_name='关联的权限')),
            ],
            options={
                'verbose_name_plural': '权限',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='uuid')),
                ('title', models.CharField(max_length=32, verbose_name='角色名称')),
                ('permission_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.Permission', verbose_name='权限')),
            ],
            options={
                'verbose_name_plural': '角色',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=32, unique=True, verbose_name='用户名')),
                ('email', models.EmailField(max_length=254, verbose_name='邮件')),
                ('phone', models.CharField(max_length=20, verbose_name='电话')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='删除状态')),
                ('created_by', models.CharField(default=models.CharField(max_length=32, unique=True, verbose_name='用户名'), max_length=32, verbose_name='创建人')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_on', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_staff', models.BooleanField(default=True, verbose_name='是否是员工')),
                ('group_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.Group', verbose_name='部门')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('role_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.Role', verbose_name='用户角色')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': '用户',
            },
        ),
    ]
